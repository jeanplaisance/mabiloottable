if(dropRates[i,1]==dropRates[i+1,1] & dropRates[i,2]==dropRates[i+1,2]){
dropRates[i,3] <- dropRates[i,3]+dropRates[i+1,3]
}
dropRates <- dropRates[-(i+1),]
}
}
return(dropRates)
}
parseEnchants("207")
test
parseEnchants("207")
parseEnchants <- function(input){
dropRates <- data.frame("Name", "Item", "Rate", stringsAsFactors=FALSE)
name<-c()
item<-c()
rate<-c()
for(i in 1:length(lootTable$Name)){
for(j in 6:8){
if(input %in% gsub("prefix:","",gsub("suffix:","",unlist(lootTable[[i,j]])))){
for(k in lootTable[[i,j]][mapply("length",lootTable[[i,j]])>1]){
if(input %in% gsub("prefix:","",gsub("suffix:","",k))){
name <- lootTable$Name[i]
item <- itemDB$name[match(k[[1]],itemDB$id)]
rate <- lootTable[[i,j-3]]/(1000000*length(lootTable[[i,j]]))
temp <- c("","")
for(l in 2:length(k)){
if(grepl("suffix:", k[[l]])){
temp[2] <- c(optionSet$name[match(gsub("suffix:","",k[[l]]), optionSet$id)])
}
else if(grepl("prefix:", k[[l]])){
temp[1] <- c(optionSet$name[match(gsub("prefix:","",k[[l]]), optionSet$id)])
}
}
item <- paste(temp, item, collapse=" ")
dropRates <- rbind(dropRates, c(name,item,rate))
}
}
}
}
}
colnames(dropRates) <- c("Name", "Item", "Rate %")
if(nrow(dropRates)>1){
dropRates <- dropRates[-1,]
dropRates[[2]] <- round(as.numeric(dropRates[[2]])*100,2)
rownames(dropRates) <- 1:nrow(dropRates)
dropRates <- dropRates[order(-dropRates[[2]]),]
}
return(dropRates)
}
parseEnchants("207")
parseEnchants <- function(input){
dropRates <- data.frame("Name", "Item", "Rate", stringsAsFactors=FALSE)
name<-c()
item<-c()
rate<-c()
for(i in 1:length(lootTable$Name)){
for(j in 6:8){
if(input %in% gsub("prefix:","",gsub("suffix:","",unlist(lootTable[[i,j]])))){
for(k in lootTable[[i,j]][mapply("length",lootTable[[i,j]])>1]){
if(input %in% gsub("prefix:","",gsub("suffix:","",k))){
name <- lootTable$Name[i]
item <- itemDB$name[match(k[[1]],itemDB$id)]
rate <- lootTable[[i,j-3]]/(1000000*length(lootTable[[i,j]]))
temp <- c("","")
for(l in 2:length(k)){
if(grepl("suffix:", k[[l]])){
temp[2] <- optionSet$name[match(gsub("suffix:","",k[[l]]), optionSet$id)]
}
else if(grepl("prefix:", k[[l]])){
temp[1] <- optionSet$name[match(gsub("prefix:","",k[[l]]), optionSet$id)]
}
}
item <- paste(temp, item, collapse=" ")
dropRates <- rbind(dropRates, c(name,item,rate))
}
}
}
}
}
colnames(dropRates) <- c("Name", "Item", "Rate %")
if(nrow(dropRates)>1){
dropRates <- dropRates[-1,]
dropRates[[2]] <- round(as.numeric(dropRates[[2]])*100,2)
rownames(dropRates) <- 1:nrow(dropRates)
dropRates <- dropRates[order(-dropRates[[2]]),]
}
return(dropRates)
}
parseEnchants("207")
parseEnchants <- function(input){
dropRates <- data.frame("Name", "Item", "Rate", stringsAsFactors=FALSE)
name<-c()
item<-c()
rate<-c()
for(i in 1:length(lootTable$Name)){
for(j in 6:8){
if(input %in% gsub("prefix:","",gsub("suffix:","",unlist(lootTable[[i,j]])))){
for(k in lootTable[[i,j]][mapply("length",lootTable[[i,j]])>1]){
if(input %in% gsub("prefix:","",gsub("suffix:","",k))){
name <- lootTable$Name[i]
item <- itemDB$name[match(k[[1]],itemDB$id)]
rate <- lootTable[[i,j-3]]/(1000000*length(lootTable[[i,j]]))
temp <- c("","")
for(l in 2:length(k)){
if(grepl("suffix:", k[[l]])){
temp[2] <- optionSet$name[match(gsub("suffix:","",k[[l]]), optionSet$id)]
}
else if(grepl("prefix:", k[[l]])){
temp[1] <- optionSet$name[match(gsub("prefix:","",k[[l]]), optionSet$id)]
}
}
item <- paste(temp, item, collapse=" ")
dropRates <- rbind(dropRates, c(name,item,rate))
}
}
}
}
}
colnames(dropRates) <- c("Name", "Item", "Rate %")
if(nrow(dropRates)>1){
dropRates <- dropRates[-1,]
dropRates[[3]] <- round(as.numeric(dropRates[[3]])*100,2)
rownames(dropRates) <- 1:nrow(dropRates)
dropRates <- dropRates[order(-dropRates[[2]]),]
}
return(dropRates)
}
parseEnchants("207")
parseEnchants <- function(input){
dropRates <- data.frame("Name", "Item", "Rate", stringsAsFactors=FALSE)
name<-c()
item<-c()
rate<-c()
for(i in 1:length(lootTable$Name)){
for(j in 6:8){
if(input %in% gsub("prefix:","",gsub("suffix:","",unlist(lootTable[[i,j]])))){
for(k in lootTable[[i,j]][mapply("length",lootTable[[i,j]])>1]){
if(input %in% gsub("prefix:","",gsub("suffix:","",k))){
name <- lootTable$Name[i]
item <- itemDB$name[match(k[[1]],itemDB$id)]
rate <- lootTable[[i,j-3]]/(1000000*length(lootTable[[i,j]]))
temp <- c("","")
for(l in 2:length(k)){
if(grepl("suffix:", k[[l]])){
temp[2] <- optionSet$name[match(gsub("suffix:","",k[[l]]), optionSet$id)]
}
else if(grepl("prefix:", k[[l]])){
temp[1] <- optionSet$name[match(gsub("prefix:","",k[[l]]), optionSet$id)]
}
}
item <- paste(temp, item, collapse=" ")
dropRates <- rbind(dropRates, c(name,item,rate))
}
}
}
}
}
colnames(dropRates) <- c("Name", "Item", "Rate %")
if(nrow(dropRates)>1){
dropRates <- dropRates[-1,]
dropRates[[3]] <- round(as.numeric(dropRates[[3]])*100,2)
rownames(dropRates) <- 1:nrow(dropRates)
dropRates <- dropRates[order(-dropRates[[3]]),]
}
return(dropRates)
}
parseEnchants("207")
lootTable[[585,7]]
lootTable[[585,7]][mapply("length",lootTable[[i,j[[)>1]]]])]
lootTable[[585,7]][mapply("length",lootTable[[i,j]])>1]
lootTable[[585,7]][mapply("length",lootTable[[585,7]])>1]
lootTable[[585,7]][mapply("length",lootTable[[585,7]])>1][[1]]
lootTable[[585,7]][mapply("length",lootTable[[585,7]])>1][[2]]
lootTable[[585,7]][mapply("length",lootTable[[585,7]])>1][[1]]
for(k in lootTable[[585,7]][mapply("length",lootTable[[585,7]])>1])
print("kek")
source('~/.active-rstudio-document', echo=TRUE)
input<-"207"
debugSource('E:/Studying/R/Mabinogi Loot Table/scratch.R', echo=TRUE)
View(dropRates)
View(dropRates)
debugSource('E:/Studying/R/Mabinogi Loot Table/scratch.R', echo=TRUE)
debugSource('E:/Studying/R/Mabinogi Loot Table/scratch.R', echo=TRUE)
View(dropRates)
View(dropRates)
View(lootTable)
parseEnchants <- function(input){
dropRates <- data.frame("Name", "Item", "Rate", stringsAsFactors=FALSE)
name<-c()
item<-c()
rate<-c()
for(i in 1:length(lootTable$Name)){
for(j in 6:8){
if(input %in% gsub("prefix:","",gsub("suffix:","",unlist(lootTable[[i,j]])))){
for(k in lootTable[[i,j]][mapply("length",lootTable[[i,j]])>1]){
if(input %in% gsub("prefix:","",gsub("suffix:","",k))){
name <- lootTable$Name[i]
item <- itemDB$name[match(k[[1]],itemDB$id)]
rate <- lootTable[[i,j-3]]/(1000000*length(lootTable[[i,j]]))
temp <- c("","")
for(l in 2:length(k)){
if(grepl("suffix:", k[[l]])){
temp[2] <- optionSet$name[match(gsub("suffix:","",k[[l]]), optionSet$id)]
}
else if(grepl("prefix:", k[[l]])){
temp[1] <- optionSet$name[match(gsub("prefix:","",k[[l]]), optionSet$id)]
}
}
item <- paste(temp[1],temp[2], item, collapse=" ")
dropRates <- rbind(dropRates, c(name,item,rate))
}
}
}
}
}
colnames(dropRates) <- c("Name", "Item", "Rate %")
if(nrow(dropRates)>1){
dropRates <- dropRates[-1,]
dropRates[[3]] <- round(as.numeric(dropRates[[3]])*100,2)
rownames(dropRates) <- 1:nrow(dropRates)
dropRates <- dropRates[order(-dropRates[[3]]),]
}
return(dropRates)
}
parseEnchants("207")
parseEnchants("31104")
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
library(shiny); runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
parseMonsters("id:60026")
parseMonsters("id:60026",1)
parseMonsters("id:60026",1)
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
parseMonsters("id:60026",2)
parseItems("id:60026",2)
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
library(shiny); runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
test <- loadData("E:\\Studying\\R\\Mabinogi Loot Table\\itemdroptype.json")
test
filepath <- "E:\\Studying\\R\\Mabinogi Loot Table\\itemdroptype.json"
dropTable <- fromJSON(filepath, simplifyVector= TRUE)
dropTable$ItemDropTypeList[[1]][[2]]
dropTable$ItemDropTypeList[[1]][[1]]
dropTable$ItemDropTypeList[[1]]
dropTable$ItemDropTypeList[1
]
dropTable$ItemDropTypeList[[1]]
head(dropTable$ItemDropTypeList)
?fromJSON
dropTable <- fromJSON(filepath, simplifyDataFrame=TRUE)
dropTable
head(dropTable)
View(dropTable)
dropTable <- fromJSON(filepath)
View(dropTable)
dropTable <- fromJSON(filepath)
dropTable <- fromJSON(filepath, simplifyVector=TRUE, simplifyDataFrame=simplifyVector)
dropTable <- fromJSON(filepath, simplifyVector=TRUE, simplifyDataFrame=TRUE)
View(dropTable)
name(dropTable$ItemDropTypeList[[1]])
names(dropTable$ItemDropTypeList[[1]])
names(dropTable$ItemDropTypeList)
names(dropTable$ItemDropTypeList[10])
names(dropTable$ItemDropTypeList[[]])
names(dropTable$ItemDropTypeList[[1]])
names(dropTable$ItemDropTypeList["Data271")
names(dropTable$ItemDropTypeList["Data271"])
match(dropTable$ItemDropTypeList["Data271"], names(dropTable$ItemDropTypeList))
dropTable$ItemDropTypeList[["Data271"]]
names(dropTable$ItemDropTypeList[["Data271"]])
names(dropTable$ItemDropTypeList[["Data271"]][[6]])
names(dropTable$ItemDropTypeList[["Data271"]][6)
names(dropTable$ItemDropTypeList[["Data271"]][6])
dropTable$ItemDropTypeList[[1]]$Drop1
match(dropTable$ItemDropTypeList[["Data271"]]$Desc, lootTable$Name)
lootTable[[585]]
lootTable$Name[585]
match(dropTable$ItemDropTypeList[["Data270"]]$Desc, lootTable$Name)
match(dropTable$ItemDropTypeList[["Data269"]]$Desc, lootTable$Name)
match(dropTable$ItemDropTypeList[["Data2"]]$Desc, lootTable$Name)
match(dropTable$ItemDropTypeList[["Data"]]$Desc, lootTable$Name)
match(dropTable$ItemDropTypeList[["Data"]]$Desc, lootTable$Name)==0
length(match(dropTable$ItemDropTypeList[["Data"]]$Desc, lootTable$Name))==0
#This file is designed to take the itemdroptype.json, which contains all the monster files, and to load them into a dataframe for
#further inspection.
library("jsonlite", lib.loc="E:/Program Files/R/R-3.3.1/library")
loadData <- function(filepath){
dropTable <- fromJSON(filepath, simplifyVector = TRUE)
lootTable <- data.frame("ID"="", "Name"="", "Drop1Rate"=0, "Drop2Rate"=0, "Drop3Rate"=0, "Drop1"=list(), "Drop2"=list(), "Drop3"=list(), stringsAsFactors = FALSE)
drop1 <- list(0)
drop2 <- list(0)
drop3 <- list(0)
for(i in 1:length(dropTable$ItemDropTypeList)){
ID <- dropTable$ItemDropTypeList[[i]]$TypeID
drop1rate <- dropTable$ItemDropTypeList[[i]]$Drop1Rate
drop3rate <- dropTable$ItemDropTypeList[[i]]$Drop3Rate
ifelse(dropTable$ItemDropTypeList[[i]]$Drop1==""| dropTable$ItemDropTypeList[[i]]$Drop1==";",
drop1 <- NA,
drop1 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[5]]), split=";")[[1]], split=" ")))
ifelse(dropTable$ItemDropTypeList[[i]]$Drop2==""| dropTable$ItemDropTypeList[[i]]$Drop2==";",
drop2 <- NA,
drop2 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[6]]), split=";")[[1]], split=" ")))
ifelse(dropTable$ItemDropTypeList[[i]]$Drop3==""| dropTable$ItemDropTypeList[[i]]$Drop3==";",
drop3 <- NA,
drop3 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[7]]), split=";")[[1]], split=" ")))
drop2rate <- dropTable$ItemDropTypeList[[i]]$Drop2Rate
name <- dropTable$ItemDropTypeList[[i]]$Desc
if(dropTable$ItemDropTypeList[[i]]$Rebalanced==1 & !length(match(dropTable$ItemDropTypeList[[i]]$Desc, lootTable$Name))==0){
lootTable[match(dropTable$ItemDropTypeList[[i]]$Desc, lootTable$Name)] <- rbind(lootTable, c(ID, name, drop1rate, drop2rate, drop3rate, drop1, drop2, drop3) )
}
else lootTable <- rbind(lootTable, c(ID, name, drop1rate, drop2rate, drop3rate, drop1, drop2, drop3) )
}
lootTable <- lootTable[-1,]
colnames(lootTable) <-c("ID", "Name",  "Drop1Rate", "Drop2Rate", "Drop3Rate", "Drop1", "Drop2", "Drop3")
rownames(lootTable) <- 1:nrow(lootTable)
lootTable$Drop1Rate <- as.numeric(lootTable$Drop1Rate)
lootTable$Drop2Rate <- as.numeric(lootTable$Drop2Rate)
lootTable$Drop3Rate <- as.numeric(lootTable$Drop3Rate)
return(lootTable)
}
loadData("E:\\Studying\\R\\Mabinogi Loot Table\\itemdroptype.json")
#This file is designed to take the itemdroptype.json, which contains all the monster files, and to load them into a dataframe for
#further inspection.
library("jsonlite", lib.loc="E:/Program Files/R/R-3.3.1/library")
loadData <- function(filepath){
dropTable <- fromJSON(filepath, simplifyVector = TRUE)
lootTable <- data.frame("ID"="ID", "Name"="Name", "Drop1Rate"=0, "Drop2Rate"=0, "Drop3Rate"=0, "Drop1"=list(0), "Drop2"=list(0), "Drop3"=list(0), stringsAsFactors = FALSE)
drop1 <- list(0)
drop2 <- list(0)
drop3 <- list(0)
for(i in 1:length(dropTable$ItemDropTypeList)){
ID <- dropTable$ItemDropTypeList[[i]]$TypeID
drop1rate <- dropTable$ItemDropTypeList[[i]]$Drop1Rate
drop3rate <- dropTable$ItemDropTypeList[[i]]$Drop3Rate
ifelse(dropTable$ItemDropTypeList[[i]]$Drop1==""| dropTable$ItemDropTypeList[[i]]$Drop1==";",
drop1 <- NA,
drop1 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[5]]), split=";")[[1]], split=" ")))
ifelse(dropTable$ItemDropTypeList[[i]]$Drop2==""| dropTable$ItemDropTypeList[[i]]$Drop2==";",
drop2 <- NA,
drop2 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[6]]), split=";")[[1]], split=" ")))
ifelse(dropTable$ItemDropTypeList[[i]]$Drop3==""| dropTable$ItemDropTypeList[[i]]$Drop3==";",
drop3 <- NA,
drop3 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[7]]), split=";")[[1]], split=" ")))
drop2rate <- dropTable$ItemDropTypeList[[i]]$Drop2Rate
name <- dropTable$ItemDropTypeList[[i]]$Desc
if(dropTable$ItemDropTypeList[[i]]$Rebalanced==1 & !length(match(dropTable$ItemDropTypeList[[i]]$Desc, lootTable$Name))==0){
lootTable[match(dropTable$ItemDropTypeList[[i]]$Desc, lootTable$Name)] <- rbind(lootTable, c(ID, name, drop1rate, drop2rate, drop3rate, drop1, drop2, drop3) )
}
else lootTable <- rbind(lootTable, c(ID, name, drop1rate, drop2rate, drop3rate, drop1, drop2, drop3) )
}
lootTable <- lootTable[-1,]
colnames(lootTable) <-c("ID", "Name",  "Drop1Rate", "Drop2Rate", "Drop3Rate", "Drop1", "Drop2", "Drop3")
rownames(lootTable) <- 1:nrow(lootTable)
lootTable$Drop1Rate <- as.numeric(lootTable$Drop1Rate)
lootTable$Drop2Rate <- as.numeric(lootTable$Drop2Rate)
lootTable$Drop3Rate <- as.numeric(lootTable$Drop3Rate)
return(lootTable)
}
loadData("E:\\Studying\\R\\Mabinogi Loot Table\\itemdroptype.json")
debugSource('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
debugSource('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
View(drop1)
length(drop1rate)
length(drop2rate)
length(drop3rate)
length(drop1)
length(drop2)
length(drop3)
length(ID)
length(name)
data.frame(ID, name, drop1rate, drop2rate, drop3rate, drop1, drop2, drop3)
data.frame(ID, name, drop1rate, drop2rate, drop3rate, list(drop1), drop2, drop3)
data.frame(ID, name, drop1rate, drop2rate, drop3rate, b, l, k)
data.frame(ID, name, drop1rate, drop2rate, drop3rate, "b", "l", "k")
?data.frame
test <- data.frame(ID, name, drop1rate, drop2rate, drop3rate, "b", "l", "k")
test
rbind(test, c(ID, name, drop1rate, drop2rate, drop3rate, drop1, drop2, drop3), check.rows=FALSE)
?I
#This file is designed to take the itemdroptype.json, which contains all the monster files, and to load them into a dataframe for
#further inspection.
library("jsonlite", lib.loc="E:/Program Files/R/R-3.3.1/library")
#loadData <- function(filepath){
dropTable <- fromJSON(filepath, simplifyVector = TRUE)
lootTable <- data.frame("ID"="ID", "Name"="Name", "Drop1Rate"=0, "Drop2Rate"=0, "Drop3Rate"=0, I("Drop1"=list(0)), I("Drop2"=list(0)), I("Drop3"=list(0)), stringsAsFactors = FALSE)
drop1 <- list(0)
drop2 <- list(0)
drop3 <- list(0)
for(i in 1:length(dropTable$ItemDropTypeList)){
ID <- dropTable$ItemDropTypeList[[i]]$TypeID
drop1rate <- dropTable$ItemDropTypeList[[i]]$Drop1Rate
drop3rate <- dropTable$ItemDropTypeList[[i]]$Drop3Rate
ifelse(dropTable$ItemDropTypeList[[i]]$Drop1==""| dropTable$ItemDropTypeList[[i]]$Drop1==";",
drop1 <- NA,
drop1 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[5]]), split=";")[[1]], split=" ")))
ifelse(dropTable$ItemDropTypeList[[i]]$Drop2==""| dropTable$ItemDropTypeList[[i]]$Drop2==";",
drop2 <- NA,
drop2 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[6]]), split=";")[[1]], split=" ")))
ifelse(dropTable$ItemDropTypeList[[i]]$Drop3==""| dropTable$ItemDropTypeList[[i]]$Drop3==";",
drop3 <- NA,
drop3 <- list(strsplit( strsplit(gsub("\\(|\\)", "", dropTable$ItemDropTypeList[[i]][[7]]), split=";")[[1]], split=" ")))
drop2rate <- dropTable$ItemDropTypeList[[i]]$Drop2Rate
name <- dropTable$ItemDropTypeList[[i]]$Desc
if(dropTable$ItemDropTypeList[[i]]$Rebalanced==1 & !length(match(dropTable$ItemDropTypeList[[i]]$Desc, lootTable$Name))==0){
lootTable[match(dropTable$ItemDropTypeList[[i]]$Desc, lootTable$Name)] <- rbind(lootTable, c(ID, name, drop1rate, drop2rate, drop3rate, drop1, drop2, drop3) )
}
else lootTable <- rbind(lootTable, c(ID, name, drop1rate, drop2rate, drop3rate, drop1, drop2, drop3) )
}
lootTable <- lootTable[-1,]
colnames(lootTable) <-c("ID", "Name",  "Drop1Rate", "Drop2Rate", "Drop3Rate", "Drop1", "Drop2", "Drop3")
rownames(lootTable) <- 1:nrow(lootTable)
lootTable$Drop1Rate <- as.numeric(lootTable$Drop1Rate)
lootTable$Drop2Rate <- as.numeric(lootTable$Drop2Rate)
lootTable$Drop3Rate <- as.numeric(lootTable$Drop3Rate)
# return(lootTable)
#}
rownames(lootTable$Name["MetalSkeleton"])
rownames(lootTable$Name[["MetalSkeleton"]])
rownames(lootTable$Name["MetalSkeleton"])
lootTable$Name["MetalSkeleton"]
length(list(0))
lootTable[1,] <- c(30, "kek", 40000, 4000, 400)
lootTable <- data.frame(c(30, "kek", 40000, 4000, 400))
lootTable
lootTable <- data.frame(30, "kek", 40000, 4000, 400)
lootTable
lootTable[1,] <- c(40, "lmao", 0, 0, 0)
lootTable <- data.frame(30, "kek", 40000, 4000, 400, stringsAsFactors=FALSE)
lootTable[1,] <- c(40, "lmao", 0, 0, 0)
lootTable[1,]
length(list())
dropTable$ItemDropTypeList["MasterLich"]
names(dropTable$ItemDropTypeList["MasterLich"])
dropTable$ItemDropTypeList["MasterLich"]$Desc
dropTable$ItemDropTypeList[["MasterLich"]]
dropTable$ItemDropTypeList[["MasterLich"]]$Desc
is.letter(dropTable$ItemDropTypeList[["MasterLich"]]$Desc)
grepl("[[:alpha:]]",dropTable$ItemDropTypeList[["MasterLich"]]$Desc)
grepl("[[:alpha:]]",dropTable$ItemDropTypeList[["879"]]$Desc)
grepl("[[:alpha:]]",dropTable$ItemDropTypeList[["ShadowSkeletonLancer"]]$Desc)
grepl("[[:alpha:]]",dropTable$ItemDropTypeList[["beeper"]]$Desc)
grepl("[[:alpha:]]",dropTable$ItemDropTypeList[["Hardmode_Gorgon2"]]$Desc)
grepl("[[:alpha:]]",dropTable$ItemDropTypeList[["Cloaker_G13"]]$Desc)
source('~/.active-rstudio-document', echo=TRUE)
debugSource('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
View(lootTable)
dropTable$itemDropTypeLIst[[12]]
dropTable$itemDropTypeList[[12]]
dropTable$ItemDropTypeList[[12]]
match(dropTable$ItemDropTypeList[[12]]$Desc, lootTable$Name)
length(match(dropTable$ItemDropTypeList[[12]]$Desc, lootTable$Name))
source('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
debugSource('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
debugSource('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
debugSource('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
debugSource('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
debugSource('E:/Studying/R/Mabinogi Loot Table/loadData.R', echo=TRUE)
library(shiny); runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
lootTable$Name[[1]]
gsub("([a-z])([A-Z])", "\\1 \\2", lootTable$Name[[1]])
gsub("([a-z])([A-Z])", "\\1 \\2", lootTable$Name)
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
?~
help(~)
?"~"
avg(lootTable$Drop1Rate)
mean(lootTable$Drop1Rate)
mean(lootTable$Drop2Rate)
mean(lootTable$Drop3Rate)
plot(lootTable$Drop1Rate, lootTable$Drop2Rate)
plot(lootTable$Drop1Rate, lootTable$Drop2Rate, ylim = c(0, log(lootTable$Drop2Rate)))
plot(lootTable$Drop1Rate, lootTable$Drop2Rate,
plot(lootTable$Drop1Rate, lootTable$Drop2Rate)
plot(lootTable$Drop1Rate, lootTable$Drop2Rate)
plot(lootTable$Drop1Rate, lootTable$Drop2Rate, ylim = c(0, 200000)
)
plot(lootTable$Drop1Rate, lootTable$Drop2Rate, log="y")
?plot
log(lootTable$Drop1Rate)
plot(lootTable$Drop1Rate, lootTable$Drop2Rate, log="y")
scatter.smooth(lootTable$Drop1Rate, lootTable$Drop2Rate)
scatter.smooth(lootTable$Drop1Rate, lootTable$Drop2Rate, log="y")
runApp('E:/Studying/R/Mabinogi Loot Table/ShinyDatabase.R')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='jeanplaisance', token='DAE608D137E188483ADFB6A86924B90A', secret='VPD1H1uuLPF5KOTTAyA8y/NqqBda3KHppw0Zjkwq')
library(rsconnect)
rsconnect::deployApp('E:\\Studying\\R\\Mabinogi Loot Table\\app.r')
library(rsconnect)
rsconnect::deployApp('E:\\Studying\\R\\Mabinogi Loot Table\\app.R')
library(rsconnect)
rsconnect::deployApp("E:\\Studying\\R\\Mabinogi Loot Table\\app.R")
rsconnect::deployApp(setwd("E:\\Studying\\R\\Mabinogi Loot Table\\app.R"))
setwd("E:\\Studying\\R\\Mabinogi Loot Table\\app.R")
setwd("E:\\Studying\\R\\Mabinogi Loot Table\\)
rsconnect::deployApp(setwd("E:\\Studying\\R\\Mabinogi Loot Table\\"))
rsconnect::deployApp(setwd("E:\\Studying\\R\\Mabinogi Loot Table\\"))
install.packages(shinyapps)
devtools::install_github("rstudio/shinyapps")
library(rsconnect)
rsconnect::deployApp(setwd("E:\\Studying\\R\\Mabinogi Loot Table\\"))
runApp()
